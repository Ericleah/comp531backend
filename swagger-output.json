{
  "openapi": "3.0.0",
  "info": {
    "title": "RiceBook API",
    "version": "1.0.0",
    "description": "RiceBook 后端 API 文档"
  },
  "paths": {
    "/article": {
      "post": {
        "summary": "Create a new article",
        "description": "Create a new article with optional image.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The content of the article."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "An optional image for the article."
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Article created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "articles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "author": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "comments": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "summary": "Get articles by ID or username",
        "description": "Fetch articles by their ID, username, or all articles if no parameter is provided.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ID of the article or username."
          }
        ],
        "responses": {
          "200": {
            "description": "Articles fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "articles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "author": {
                            "type": "string"
                          },
                          "text": {
                            "type": "string"
                          },
                          "comments": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update an article or its comments",
        "description": "Update an article's text or add/edit a comment.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the article to be updated."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commentId": {
                    "type": "integer",
                    "description": "ID of the comment (-1 to add a new comment)."
                  },
                  "text": {
                    "type": "string",
                    "description": "The updated text or comment."
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Article or comment not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Authenticate user and set session",
        "description": "Verify username and password, and establish a session for the user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing username or password"
          },
          "401": {
            "description": "Invalid username or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Create a new user and profile with hashed password",
        "description": "Register a new user, hash their password, and store user and profile information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dob": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email",
                  "dob",
                  "phone",
                  "zipcode"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or username already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/logout": {
      "put": {
        "summary": "Log out the user by clearing the session",
        "description": "Destroy the user's session and clear the session cookie.",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is not logged in"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/following/{user}": {
      "get": {
        "summary": "Fetch the list of users a user is following",
        "description": "Retrieve the list of usernames the specified user is following. If no username is provided, retrieve the list for the logged-in user.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The username of the user"
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the following list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "following": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Add a user to the following list",
        "description": "Add the specified user to the logged-in user's following list.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The username of the user to follow"
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully added to the following list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "following": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Username to follow is required"
          },
          "404": {
            "description": "User to follow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Remove a user from the following list",
        "description": "Remove the specified user from the logged-in user's following list.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The username of the user to unfollow"
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully removed from the following list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "following": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Username to unfollow is required"
          },
          "404": {
            "description": "User to unfollow not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/headline/{user}": {
      "get": {
        "summary": "Get the headline for a user",
        "description": "Retrieve the headline of a user by username. If no username is provided, get the logged-in user's headline.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Username of the user"
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Headline retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "headline": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/headline": {
      "put": {
        "summary": "Update the logged-in user's headline",
        "description": "Update the headline for the logged-in user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "headline": {
                    "type": "string"
                  }
                },
                "required": [
                  "headline"
                ]
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Headline updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "headline": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Headline is required"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/email/{user}": {
      "get": {
        "summary": "Get the email for a user",
        "description": "Retrieve the email of a user by username. If no username is provided, get the logged-in user's email.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Username of the user"
          }
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/email": {
      "put": {
        "summary": "Update the logged-in user's email",
        "description": "Update the email for the logged-in user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email is required"
          },
          "404": {
            "description": "Profile not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/password": {
      "put": {
        "summary": "Change the logged-in user's password",
        "description": "Update the password for the logged-in user. The new password will be hashed and stored securely.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "password"
                ]
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "New password is required"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}